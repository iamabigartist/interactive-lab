{"version":3,"sources":["Labs/Three/MyCanvas.tsx","Labs/States/ZustandStore/Slices/CounterDictSlice.ts","Labs/States/ZustandStore/useStoreZustand.ts","Labs/States/ZustandStore/ZustandLab.tsx","Labs/Three/DrawFunction.tsx","Utilities/DemoShow.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["MyCanvas","useState","v","setV","canvas","useRef","useEffect","scene","THREE","camera","window","innerWidth","innerHeight","renderer","antialias","setSize","geometry","material","color","cube","add","position","z","animate","requestAnimationFrame","rotation","x","y","render","current","replaceChildren","domElement","ref","style","padding","Slider","progress","value","min","max","step","onChange","enableAllPlugins","createCounterDictSlice","set","get","api","counter_dict","Map","add1","name","produce","state","useStoreZustand","create","OneStore","v1","useControls","Array","from","num","TaylorExpansion","f","variable","x0","order","derivatives","f_parsed","parse","i","derivative","push","derivative_0_to_n","expansion","evaluate","SampleFx","range","sample_point_array","cur_x","cur_y","Infinity","Vector2","Array_V2TOV3","array_V2","array_V3","v2","Vector3","DrawFunction","ori_f","setOrder","cur_curve_string","cur_curve","compile","simplify","toString","cur_curve_points","ori_curve","ori_curve_points","backgroundColor","left","width","top","height","flexDirection","display","marginLeft","gl","zoom","Line","points","OrbitControls","enableRotate","maxDistance","minDistance","margin","DemoShow","display_i","setDisplay_i","display_demos","item","href","Dropdown","title","activeKey","onSelect","eventKey","map","index","Item","App","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d2e5380b.chunk.js","sourcesContent":["import React, {FC, useEffect, useRef, useState} from 'react';\r\nimport \"rsuite/dist/rsuite.min.css\";\r\nimport * as THREE from \"three\";\r\nimport {Slider} from \"rsuite\";\r\n\r\nexport const MyCanvas: FC = () => {\r\n\r\n    const [v, setV] = useState(5);\r\n    const canvas = useRef<HTMLDivElement>(null);\r\n    useEffect(() => {\r\n        const scene = new THREE.Scene();\r\n        const camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);\r\n\r\n        const renderer = new THREE.WebGLRenderer({antialias: true});\r\n        renderer.setSize(window.innerWidth, window.innerHeight);\r\n        const geometry = new THREE.BoxGeometry();\r\n        const material = new THREE.MeshBasicMaterial({color: new THREE.Color(0.1 * v, 0.1 * v, 0.1 * v)});\r\n        const cube = new THREE.Mesh(geometry, material);\r\n        const animate = function () {\r\n            requestAnimationFrame(animate);\r\n\r\n            cube.rotation.x = v;\r\n            cube.rotation.y = v;\r\n\r\n            renderer.render(scene, camera);\r\n        };\r\n\r\n        scene.add(cube);\r\n\r\n        camera.position.z = v;\r\n\r\n        animate();\r\n        canvas.current?.replaceChildren(renderer.domElement);\r\n\r\n\r\n    }, [canvas, v]);\r\n\r\n    return (\r\n        <div>\r\n            <div ref={canvas}/>\r\n            <div style={{padding: \"50px 50px 50px 50px\"}}>\r\n                <Slider\r\n                    progress\r\n                    value={v}\r\n                    min={5}\r\n                    max={10}\r\n                    step={0.01}\r\n                    onChange={value => {\r\n                        setV(value);\r\n                    }}\r\n                />\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\n","import {StateCreator} from \"zustand\"\r\nimport {ZustandState} from \"../useStoreZustand\";\r\nimport produce, {enableAllPlugins} from \"immer\";\r\n\r\nexport interface CounterDictSlice {\r\n    counter_dict: Map<string, number>,\r\n    add1: (name: string) => void,\r\n}\r\n\r\nenableAllPlugins();\r\n\r\nconst createCounterDictSlice: StateCreator<ZustandState> = (\r\n    set,\r\n    get,\r\n    api) => ({\r\n    counter_dict: new Map<string, number>(),\r\n    add1: (name: string) => {\r\n        set(produce<CounterDictSlice>(state => {\r\n            state.counter_dict.set(name, (state.counter_dict.get(name) ?? 0) + 1);\r\n        }));\r\n    },\r\n});\r\n\r\nexport default createCounterDictSlice;","import create from \"zustand\";\r\nimport createCounterDictSlice, {CounterDictSlice} from \"./Slices/CounterDictSlice\";\r\nimport {MoutainDictSlice} from \"./Slices/MoutainSlice\";\r\n\r\n\r\nexport type ZustandState = CounterDictSlice & MoutainDictSlice;\r\n\r\nconst useStoreZustand =\r\n    create<ZustandState>(((\r\n        set,\r\n        get,\r\n        api) => (\r\n        {\r\n            ...createCounterDictSlice(set, get, api),\r\n        })));\r\n\r\nexport default useStoreZustand;","import useStoreZustand from \"./useStoreZustand\";\r\nimport React, {useEffect} from \"react\";\r\nimport {useControls} from \"leva\";\r\n\r\nexport const OneStore = () => {\r\n    const {counter_dict, add1} = useStoreZustand();\r\n    const {v1} = useControls({v1: {min: 0, max: 10, value: 1}});\r\n\r\n\r\n    useEffect(() => {\r\n        add1(\"On Once Effect\")\r\n    }, [add1]);\r\n\r\n    useEffect(() => {\r\n        add1(\"On v1 change\")\r\n    }, [v1]);\r\n\r\n\r\n    return <div>\r\n        <h1>Show the num of renderin:</h1>\r\n        {Array.from(counter_dict,\r\n            ([name, num]) =>\r\n                <h3>{name}: {num}</h3>)}\r\n    </div>;\r\n}","import {FC, useState} from \"react\";\r\nimport {Canvas} from \"@react-three/fiber\";\r\nimport {acos, chain, compile, derivative, evaluate, exp, parse, parser, simplify, string} from \"mathjs\";\r\nimport {Line, OrbitControls, useHelper} from \"@react-three/drei\";\r\nimport {ArrowHelper, Vector2, Vector3} from \"three\";\r\nimport {Slider} from \"rsuite\";\r\n\r\nconst approach_line_len = 100000;\r\n\r\n\r\nexport function derivative_n(f: string, variable: string, order: number) {\r\n\r\n    let f_parsed = parse(f);\r\n    for (let i = 0; i < order; i++) {\r\n        f_parsed = derivative(f_parsed, variable);\r\n    }\r\n    return f_parsed;\r\n}\r\n\r\nexport function TaylorExpandTerm(f: string, variable: string, x0: number, order: number) {\r\n    return `((${variable}-${x0})^${order})*${derivative_n(f, variable, order)}/${order}!`;\r\n}\r\n\r\nexport function derivative_0_to_n(f: string, variable: string, order: number) {\r\n    let f_parsed = parse(f);\r\n    let derivatives = [f_parsed];\r\n    for (let i = 0; i < order; i++) {\r\n        f_parsed = derivative(f_parsed, variable);\r\n        derivatives.push(f_parsed);\r\n    }\r\n    return derivatives;\r\n}\r\n\r\nexport function TaylorExpansion(f: string, variable: string, x0: number, order: number) {\r\n    let derivatives = derivative_0_to_n(f, variable, order);\r\n    let expansion = \"\";\r\n    for (let i = 0; i <= order; i++) {\r\n        expansion += `+((${variable}-${x0})^${i})*${derivatives[i].evaluate({x: x0})}/${i}!`;\r\n    }\r\n    return expansion;\r\n}\r\n\r\nexport function SampleFx(\r\n    f: (x: number) => number,\r\n    range: [number, number],\r\n    step: number) {\r\n    let sample_point_array = [];\r\n    for (let cur_x = range[0]; cur_x < range[1]; cur_x += step) {\r\n        let cur_y = f(cur_x);\r\n        if (cur_y === Infinity) continue;\r\n        sample_point_array.push(new Vector2(cur_x, cur_y));\r\n    }\r\n    return sample_point_array;\r\n}\r\n\r\nexport function Array_V2TOV3(array_V2: Vector2[]) {\r\n    let array_V3 = [];\r\n    for (const v2 of array_V2) {\r\n        array_V3.push(new Vector3(v2.x, v2.y, 0));\r\n    }\r\n    return array_V3;\r\n}\r\n\r\nconst DrawFunction: FC = () => {\r\n\r\n    const [ori_f, setOri_f] = useState(\"sin(x^2)\");\r\n    const [order, setOrder] = useState(3);\r\n    const [range, setRange] = useState<[number, number]>([-5, 5]);\r\n    const [step, setStep] = useState(0.01);\r\n\r\n    let cur_curve_string = TaylorExpansion(ori_f, \"x\", 1, order);\r\n    let cur_curve = compile(simplify(cur_curve_string).toString());\r\n    let cur_curve_points = Array_V2TOV3(SampleFx(\r\n        (x) =>\r\n            cur_curve.evaluate({x: x}),\r\n        range, step));\r\n\r\n    let ori_curve = compile(simplify(ori_f).toString());\r\n    let ori_curve_points = Array_V2TOV3(SampleFx(\r\n        (x) =>\r\n            ori_curve.evaluate({x: x}),\r\n        range, step));\r\n\r\n    return (<div style={{\r\n        backgroundColor: \"ghostwhite\",\r\n        position: \"absolute\",\r\n        left: \"10%\",\r\n        width: \"80%\",\r\n        top: \"30%\",\r\n        height: \"50%\",\r\n        flexDirection: \"row\",\r\n        display: \"flex\"\r\n    }}>\r\n        <div style={{backgroundColor:\"beige\",marginLeft:\"10px\"}}>\r\n            <Canvas gl={{antialias: true}} camera={{zoom: 1}}>\r\n                <Line points={cur_curve_points} color={\"red\"}/>\r\n                <Line points={ori_curve_points}/>\r\n                <OrbitControls enableRotate={false} maxDistance={30} minDistance={0.1}/>\r\n            </Canvas>\r\n        </div>\r\n        <div style={{width:\"30%\",backgroundColor:\"azure\",}}>\r\n            <div style={{margin:\"10px 10px 10px 10px\"}}>\r\n                <p>Order</p>\r\n                <Slider step={1} min={0} max={7} value={order} onChange={(v) => {\r\n                    setOrder(v);\r\n                }}/>\r\n            </div>\r\n        </div>\r\n    </div>);\r\n}\r\n\r\nexport default DrawFunction;","import React, {FC, useState} from 'react';\r\nimport \"rsuite/dist/rsuite.min.css\";\r\nimport {MyCanvas} from \"../Labs/Three/MyCanvas\";\r\nimport {Dropdown} from \"rsuite\";\r\nimport {OneStore} from \"../Labs/States/ZustandStore/ZustandLab\";\r\nimport DrawFunction from \"../Labs/Three/DrawFunction\";\r\n\r\nconst DemoShow: FC = () => {\r\n\r\n    const [display_i, setDisplay_i] = useState(2);\r\n    const display_demos = ([\r\n        {name: \"plain THREE canvas\", item: <MyCanvas/>},\r\n        {name: \"Zustand\", item: <OneStore/>},\r\n        {name: \"THREE draw function\", item: <DrawFunction/>},\r\n        {\r\n            name: \"Test End\", item:\r\n                <div>\r\n                    <h1>This repo is used to test all kinds of interactive packages for our website.</h1>\r\n                    <a href={\"https://github.com/64cksp4c3\"}>Studio HomePage</a>\r\n                </div>\r\n        }\r\n    ]);\r\n\r\n    return (\r\n        <div>\r\n            {display_demos[display_i].item}\r\n\r\n            {/*The demo selector*/}\r\n            <Dropdown\r\n                title={display_demos[display_i].name}\r\n                activeKey={display_i}\r\n                style={{position: \"fixed\", top: \"5%\", left: \"5%\"}}\r\n                onSelect={eventKey => {\r\n                    setDisplay_i(eventKey);\r\n                }}\r\n            >\r\n                <div>\r\n                    {display_demos.map((value, index) =>\r\n                        <Dropdown.Item key={index} eventKey={index}>{value.name} </Dropdown.Item>)}\r\n                </div>\r\n            </Dropdown>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default DemoShow;\r\n","import React, {useState} from 'react';\r\nimport \"rsuite/dist/rsuite.min.css\";\r\nimport './App.css';\r\nimport DemoShow from \"./Utilities/DemoShow\";\r\nfunction App() {\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"App\">\r\n            <DemoShow/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}